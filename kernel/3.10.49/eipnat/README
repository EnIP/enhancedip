	Installing Openwrt with Enhanced IP (EnIP) support on the Western Digital N750 router.
					3/25/2018

I.  Getting Openwrt barrier breaker to compile for the Western Digital N750 router
II. Getting Enhanced IP to work on openwrt

------------------------------------------------------------------------------------

I.  Getting Openwrt barrier breaker to compile for the Western Digital N750 router

   0)	On an Ubuntu 16.04 system with git, gcc, make, binutils installed do the following:

	mkdir -p $HOME/Projects/
	cd $HOME/Projects/
	git clone https://github.com/EnIP/enhancedip.git
	git clone -b barrier_breaker git://github.com/openwrt/archive.git
	cd $HOME/Projects/archive
	./scripts/feeds update -a
	./scripts/feeds install -a
	make menuconfig
		->Kernel Modules->Netfilter Extensions->kmod-ipt-nat=y
		->Luci->collections->luci=*
		->Luci->collections->luci-ssl=*

   1) Edit the download.pl script in $HOME/Projects/archive/scripts/download.pl.  Places with the text 'ftp.all.kernel.org'
      should be changed to www.kernel.org.

      Also a minor edit in $HOME/Projects/archive/package/network/services/ppp/Makefile is needed. 
	Lines with this text:
		PKG_SOURCE_URLscript ftp://ftp.samba.org/pub/ppp/ppp-2.4.6.tar.gz
	Should be changed to this:           
		PKG_SOURCE_URLscript http://download.samba.org/pub/ppp/ppp-2.4.6.tar.gz

   2) Build the openwrt source code. 	
	cd $HOME/Projects/archive
	make

   3) Uploading the openwrt OS to the N750.

	****IMPORTANT*****
	Follow the 'Installation' instructions here except use the OS we've just built instead of the download being offered:
	The openwrt image is in $HOME/Projects/archive/bin/ar71xx/openwrt-ar71xx-generic-mynet-n750-squashfs-factory.bin
	****IMPORTANT*****
	
	https://wiki.openwrt.org/toh/wd/n750

   4) telnet into the router and change the password
	telnet 192.168.1.1
	passwd

   5) login via ssh using the new password.
	ssh root@192.168.1.1

   6) Login via Luci as root with the new password
	Open a browser and go to: https://192.168.1.1/


II. Getting Enhanced IP to work on openwrt

   0) Copy the modified Enhanced IP's version of nf_nat_core.c into the barrier breaker source tree.
	cp $HOME/Projects/enhancedip/kernel/3.10.49/eipnat/nf_nat_core.c $HOME/Projects/archive/build_dir/target-mips_34kc_uClibc-0.9.33.2/linux-ar71xx_generic/linux-3.10.49/net/netfilter/
	cd $HOME/Projects/archive/ 
	make

   1) At the end of the second 'make' call  a new nf_nat.ko file will be produced in:
	$HOME/Projects/archive/build_dir/target-mips_34kc_uClibc-0.9.33.2/linux-ar71xx_generic/linux-3.10.49/net/netfilter/
	You can upload this file to the openwrt router. 

	scp $HOME/Projects/archive/build_dir/target-mips_34kc_uClibc-0.9.33.2/linux-ar71xx_generic/linux-3.10.49/net/netfilter/nf_nat.ko root@192.168.1.1:/root/

   2) Make a backup copy of the existing nf_nat.ko that already exists on the router.

	find / -name nf_nat.ko
	cp /lib/modules/3.10.49/nf_nat.ko /root/nf_nat.ko.orig

   3) Copy the new nf_nat.ko so it will load when NAT loads.
	cp /root/nf_nat.ko /lib/modules/3.10.49/nf_nat.ko

   4) Set the environment variable PATH so it can find the gcc cross compiler.  e.g. mips-openwrt-linux-uclibc-gcc

	export PATH=$PATH:$HOME/Projects/archive/staging_dir/toolchain-mips_34kc_gcc-4.8-linaro_uClibc-0.9.33.2/bin/

	cd $HOME/Projects/enhancedip/kernel/3.10.49/eipnat/
	make -j 	#to build the Enhanced IP driver.  (eipnat.ko)

   5) Upload eipnat.ko to /root/ on the router.
        cd $HOME/Projects/enhancedip/kernel/3.10.49/eipnat/
	scp eipnat.ko root@192.168.1.1:/root/

   6) Load the eipnat.ko driver.  masq_ip is set to the IP address you want to use as your masquerade address.
      The masq_ip is the public IP WAN address your receives via DHCP/static allocation from your ISP.
      nic_name is the network interface associated with masq_ip.  It will be the same interface as that associated
      with masq_ip.

	insmod eipnat.ko masq_ip=1.2.3.4 nic_name=eth0


