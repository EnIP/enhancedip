96a97
> #include <linux/eip.h>
786a788
> 	int retval = 0;
787a790
> 	struct extended_ip eip;
791a795,813
> 	/**
> 	 * Add on enhanced ip (enip) options here.
> 	 * This will setup ipc.opt below.
> 	 */
> 	memset(&eip, 0, sizeof(eip));
> 	if(sk->sk_socket && sk->ext_daddr){
> 	    eip.optionid      = 0x9a;
> 	    eip.option_length = 12;
> 	    eip.edp           = 1;
> 	    
> 	    eip.esp           = 1;
> 	    eip.extended_saddr = 0xFFFFFFFF;
> 
> 	    eip.extended_daddr = htonl(sk->ext_daddr);
> 
> 	    retval = kernel_setsockopt(sk->sk_socket, IPPROTO_IP, IP_OPTIONS,
> 	    				(char *)&eip, sizeof(eip));
> 	}
> 
1560a1583,1609
> /**
>  * enhanced ip (enip)
>  * if we are receiving a udp packet that contains an extended
>  * IP packet, save off the source address for use later in
>  * case the socket needs to transmit extended IP packets back
>  * in the other direction.
>  */
> void udp_save_extended_ip(struct sock *sk, struct sk_buff *skb)
> {
> 	struct iphdr *iph;
> 	struct extended_ip *eip;
> 
> 	iph = ip_hdr(skb);
> 	if(!iph){ 
> 		return;
> 	}
> 
> 	if(iph->ihl == 8){
> 		eip = (struct extended_ip *)(iph + 1);	
> 		if(eip->optionid == 0x9a){
> 			sk->ext_daddr = ntohl(eip->extended_saddr);
> 			//printk("udp sk->ext_daddr=%x\n", 
> 			//		htonl(sk->ext_daddr));
> 		}
> 	}
> }
> 
1606a1656,1658
> 
> 		udp_save_extended_ip(sk, skb);
> 
