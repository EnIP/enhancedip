1) Copy the modified nf_nat_core.c to 
	openwrt/build_dir/target-mips_34kc_uClibc-0.9.33.2/linux-ar71xx_generic/linux-3.10.49/net/netfilter/

2) Type 'make' in the top-level 'openwrt' directory.  At the end a new nf_nat.ko file will be produced in:
	openwrt/build_dir/target-mips_34kc_uClibc-0.9.33.2/linux-ar71xx_generic/linux-3.10.49/net/netfilter/.  
	You can upload this file to the openwrt router. 

	scp openwrt/build_dir/target-mips_34kc_uClibc-0.9.33.2/linux-ar71xx_generic/linux-3.10.49/net/netfilter/nf_nat.ko \
		root@192.168.1.1:/root/

3) Make a backup copy of the existing nf_nat.ko that already exists on the router.

	find / -name nf_nat.ko
	cp /lib/modules/3.10.49/nf_nat.ko /root/nf_nat.ko.orig

4) Copy the new nf_nat.ko so it will load when NAT loads.
	cp /root/nf_nat.ko /lib/modules/3.10.49/nf_nat.ko

5) Set the environment variable PATH so it can find the gcc cross compiler.  e.g. mips-openwrt-linux-uclibc-gcc

	export PATH=$PATH:openwrt/staging_dir/toolchain-mips_34kc_gcc-4.8-linaro_uClibc-0.9.33.2/bin//mips-openwrt-linux-uclibc-gcc

	Type 'make -j' to build the Enhanced IP driver.  (eipnat.ko)

6) Upload eipnat.ko to /root/ on the router.
	scp eipnat.ko root@192.168.1.1:/root/

7) Load the eipnat.ko driver.  masq_ip is set to the IP address you want to use as your masquerade address.
   nic_name is the network interface associated with masq_ip.

	insmod eipnat.ko masq_ip=1.2.3.4 nic_name=eth0


